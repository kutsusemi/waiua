{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": ""
    }
  ],
  "info": {
    "title": "Valorant API",
    "version": "1.0.0",
    "description": "Valorant API"
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "//auth.riotgames.com/api/v1/authorization": {
      "post": {
        "description": "Prepare cookies for auth request",
        "summary": "Auth Cookies",
        "security": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hoge": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "hoge"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Submits a multi-factor authentication code for login",
        "summary": "Multi-Factor Authentication",
        "security": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hoge": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "hoge"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "//auth.riotgames.com/authorize?redirect_uri=https%3A%2F%2Fplayvalorant.com%2Fopt_in&client_id=play_valorant_web_prod&response_type=token%20id_token&nonce=1&scope=account%20openid": {
      "get": {
        "description": "Get a new token using the cookies from a previous authorization request  \nUse the saved cookies from [PUT Auth Request] (specifically the `ssid` cookie). The auth token and id token can be found from the url this request redirects to.  \n  \nIt's recommended to use this endpoint instead of storing the password and sending it again.  \n  \nThere are ongoing tests at documented at <https://github.com/techchrism/riot-auth-test> that test for auth lifespan using different cookie strategies.  \nCurrently, it appears refreshing with just the `ssid` cookie is only stable for one week and refreshing with all auth cookies is stable for three weeks.  \n  \nOn a successful response, the 301 redirect location header will be of the format:\n> ```https://playvalorant.com/opt_in#access_token={access token}&scope=openid&iss=https%3A%2F%2Fauth.riotgames.com&id_token={id token}&token_type=Bearer&session_state={session state}&expires_in=3600```\n  \nOn an unsuccessful response, the 301 redirect location header will be of the format:\n> ```https://authenticate.riotgames.com/login?client_id=play-valorant-web-prod&nonce=1&redirect_uri=https%3A%2F%2Fauth.riotgames.com%2Fauthorize%3Fclient_id%3Dplay-valorant-web-prod%26nonce%3D1%26redirect_uri%3Dhttps%253A%252F%252Fplayvalorant.com%252Fopt_in%26response_type%3Dtoken%2520id_token&response_type=token%20id_token&method=riot_identity```\n",
        "summary": "Cookie Reauth",
        "security": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hoge": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "hoge"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "//entitlements.auth.riotgames.com/api/token/v1": {
      "post": {
        "description": "Get entitlement for remote requests with a token",
        "summary": "Entitlement",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entitlements_token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "entitlements_token"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "//auth.riotgames.com/userinfo": {
      "get": {
        "description": "Get the PUUID and other info from a token",
        "summary": "Player Info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "country": {
                      "type": "string"
                    },
                    "sub": {
                      "type": "string",
                      "pattern": "^([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})$",
                      "description": "Player UUID"
                    },
                    "email_verified": {
                      "type": "boolean"
                    },
                    "player_plocale": {
                      "nullable": true
                    },
                    "country_at": {
                      "type": "number",
                      "nullable": true,
                      "description": "Milliseconds since epoch"
                    },
                    "pw": {
                      "type": "object",
                      "properties": {
                        "cng_at": {
                          "type": "number",
                          "description": "Milliseconds since epoch"
                        },
                        "reset": {
                          "type": "boolean"
                        },
                        "must_reset": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "cng_at",
                        "reset",
                        "must_reset"
                      ]
                    },
                    "phone_number_verified": {
                      "type": "boolean"
                    },
                    "account_verified": {
                      "type": "boolean"
                    },
                    "ppid": {
                      "nullable": true
                    },
                    "federated_identity_providers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "player_locale": {
                      "type": "string",
                      "nullable": true
                    },
                    "acct": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "number"
                        },
                        "state": {
                          "type": "string"
                        },
                        "adm": {
                          "type": "boolean"
                        },
                        "game_name": {
                          "type": "string"
                        },
                        "tag_line": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "number",
                          "description": "Milliseconds since epoch"
                        }
                      },
                      "required": [
                        "type",
                        "state",
                        "adm",
                        "game_name",
                        "tag_line",
                        "created_at"
                      ]
                    },
                    "age": {
                      "type": "number"
                    },
                    "jti": {
                      "type": "string"
                    },
                    "affinity": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "country",
                    "sub",
                    "email_verified",
                    "country_at",
                    "pw",
                    "phone_number_verified",
                    "account_verified",
                    "federated_identity_providers",
                    "player_locale",
                    "acct",
                    "age",
                    "jti",
                    "affinity"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "//riot_geo.pas.si.riotgames.com/pas/v1/product/valorant": {
      "put": {
        "description": "Get the region for a given ID token and auth token. The ID token and auth token can be obtained from [PUT Cookie Reauth]",
        "summary": "Riot Geo",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "affinities": {
                      "type": "object",
                      "properties": {
                        "pbe": {
                          "type": "string"
                        },
                        "live": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "pbe",
                        "live"
                      ],
                      "description": "The region IDs for PBE and live servers"
                    }
                  },
                  "required": [
                    "token",
                    "affinities"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "//riot_geo.pas.si.riotgames.com/pas/v1/service/chat": {
      "get": {
        "description": "Get a PAS token using the auth token. The PAS token is a JWT that contains the affinity for the XMPP server.",
        "summary": "PAS Token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "The PAS token"
                }
              }
            }
          }
        }
      }
    },
    "//clientconfig.rpg.riotgames.com/api/v1/config/player?app=Riot%20Client": {
      "get": {
        "description": "Gets the config file used by the Riot Client. This includes a ton of info, most of it undocumented.",
        "summary": "Riot Client Config",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "X-Riot-Entitlements-JWT",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "chat.affinities": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Chat Server Host"
                          },
                          "description": "Mapping of affinity ID to chat server host"
                        },
                        "chat.affinity_domains": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string",
                            "description": "Affinity Domain"
                          },
                          "description": "Mapping of affinity ID to affinity domain"
                        },
                        "chat.port": {
                          "type": "number",
                          "description": "Chat server port"
                        }
                      },
                      "required": [
                        "chat.affinities",
                        "chat.affinity_domains",
                        "chat.port"
                      ]
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "nullable": true
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}