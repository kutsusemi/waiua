/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClientconfigRpgRiotgamesComApiV1ConfigPlayerAppRiot20ClientGet200Response {
    /// Mapping of affinity ID to chat server host
    #[serde(rename = "chat.affinities")]
    pub chat_period_affinities: std::collections::HashMap<String, String>,
    /// Mapping of affinity ID to affinity domain
    #[serde(rename = "chat.affinity_domains")]
    pub chat_period_affinity_domains: std::collections::HashMap<String, String>,
    /// Chat server port
    #[serde(rename = "chat.port")]
    pub chat_period_port: f64,
}

impl ClientconfigRpgRiotgamesComApiV1ConfigPlayerAppRiot20ClientGet200Response {
    pub fn new(chat_period_affinities: std::collections::HashMap<String, String>, chat_period_affinity_domains: std::collections::HashMap<String, String>, chat_period_port: f64) -> ClientconfigRpgRiotgamesComApiV1ConfigPlayerAppRiot20ClientGet200Response {
        ClientconfigRpgRiotgamesComApiV1ConfigPlayerAppRiot20ClientGet200Response {
            chat_period_affinities,
            chat_period_affinity_domains,
            chat_period_port,
        }
    }
}

