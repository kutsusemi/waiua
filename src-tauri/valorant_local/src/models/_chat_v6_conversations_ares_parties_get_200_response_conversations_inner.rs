/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChatV6ConversationsAresPartiesGet200ResponseConversationsInner {
    #[serde(rename = "cid")]
    pub cid: String,
    #[serde(rename = "direct_messages")]
    pub direct_messages: bool,
    #[serde(rename = "global_readership")]
    pub global_readership: bool,
    #[serde(rename = "message_history")]
    pub message_history: bool,
    #[serde(rename = "mid")]
    pub mid: String,
    #[serde(rename = "muted")]
    pub muted: bool,
    #[serde(rename = "mutedRestriction")]
    pub muted_restriction: bool,
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "uiState")]
    pub ui_state:
        Box<models::ChatV6ConversationsAresPartiesGet200ResponseConversationsInnerUiState>,
    #[serde(rename = "unread_count")]
    pub unread_count: f64,
}

impl ChatV6ConversationsAresPartiesGet200ResponseConversationsInner {
    pub fn new(
        cid: String,
        direct_messages: bool,
        global_readership: bool,
        message_history: bool,
        mid: String,
        muted: bool,
        muted_restriction: bool,
        r#type: Type,
        ui_state: models::ChatV6ConversationsAresPartiesGet200ResponseConversationsInnerUiState,
        unread_count: f64,
    ) -> ChatV6ConversationsAresPartiesGet200ResponseConversationsInner {
        ChatV6ConversationsAresPartiesGet200ResponseConversationsInner {
            cid,
            direct_messages,
            global_readership,
            message_history,
            mid,
            muted,
            muted_restriction,
            r#type,
            ui_state: Box::new(ui_state),
            unread_count,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "groupchat")]
    Groupchat,
    #[serde(rename = "chat")]
    Chat,
}

impl Default for Type {
    fn default() -> Type {
        Self::Groupchat
    }
}
