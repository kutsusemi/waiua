/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProductSessionV1ExternalSessionsGet200ResponseValueLaunchConfiguration {
    #[serde(rename = "arguments")]
    pub arguments: Vec<String>,
    #[serde(rename = "executable")]
    pub executable: String,
    #[serde(rename = "locale", deserialize_with = "Option::deserialize")]
    pub locale: Option<String>,
    #[serde(rename = "voiceLocale", deserialize_with = "Option::deserialize")]
    pub voice_locale: Option<serde_json::Value>,
    #[serde(rename = "workingDirectory")]
    pub working_directory: String,
}

impl ProductSessionV1ExternalSessionsGet200ResponseValueLaunchConfiguration {
    pub fn new(
        arguments: Vec<String>,
        executable: String,
        locale: Option<String>,
        voice_locale: Option<serde_json::Value>,
        working_directory: String,
    ) -> ProductSessionV1ExternalSessionsGet200ResponseValueLaunchConfiguration {
        ProductSessionV1ExternalSessionsGet200ResponseValueLaunchConfiguration {
            arguments,
            executable,
            locale,
            voice_locale,
            working_directory,
        }
    }
}
