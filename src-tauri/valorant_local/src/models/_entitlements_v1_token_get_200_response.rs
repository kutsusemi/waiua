/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EntitlementsV1TokenGet200Response {
    /// Used as the token in requests
    #[serde(rename = "accessToken")]
    pub access_token: String,
    #[serde(rename = "entitlements")]
    pub entitlements: Vec<serde_json::Value>,
    #[serde(rename = "issuer")]
    pub issuer: String,
    /// Player UUID
    #[serde(rename = "subject")]
    pub subject: String,
    /// Used as the entitlement in requests
    #[serde(rename = "token")]
    pub token: String,
}

impl EntitlementsV1TokenGet200Response {
    pub fn new(access_token: String, entitlements: Vec<serde_json::Value>, issuer: String, subject: String, token: String) -> EntitlementsV1TokenGet200Response {
        EntitlementsV1TokenGet200Response {
            access_token,
            entitlements,
            issuer,
            subject,
            token,
        }
    }
}

