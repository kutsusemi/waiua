/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProductSessionV1ExternalSessionsGet200ResponseValue {
    #[serde(rename = "exitCode")]
    pub exit_code: f64,
    #[serde(rename = "exitReason", deserialize_with = "Option::deserialize")]
    pub exit_reason: Option<serde_json::Value>,
    #[serde(rename = "isInternal")]
    pub is_internal: bool,
    #[serde(rename = "launchConfiguration")]
    pub launch_configuration: Box<models::ProductSessionV1ExternalSessionsGet200ResponseValueLaunchConfiguration>,
    #[serde(rename = "patchlineFullName")]
    pub patchline_full_name: PatchlineFullName,
    #[serde(rename = "patchlineId")]
    pub patchline_id: PatchlineId,
    #[serde(rename = "phase")]
    pub phase: String,
    #[serde(rename = "productId")]
    pub product_id: ProductId,
    #[serde(rename = "version")]
    pub version: String,
}

impl ProductSessionV1ExternalSessionsGet200ResponseValue {
    pub fn new(exit_code: f64, exit_reason: Option<serde_json::Value>, is_internal: bool, launch_configuration: models::ProductSessionV1ExternalSessionsGet200ResponseValueLaunchConfiguration, patchline_full_name: PatchlineFullName, patchline_id: PatchlineId, phase: String, product_id: ProductId, version: String) -> ProductSessionV1ExternalSessionsGet200ResponseValue {
        ProductSessionV1ExternalSessionsGet200ResponseValue {
            exit_code,
            exit_reason,
            is_internal,
            launch_configuration: Box::new(launch_configuration),
            patchline_full_name,
            patchline_id,
            phase,
            product_id,
            version,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PatchlineFullName {
    #[serde(rename = "VALORANT")]
    Valorant,
    #[serde(rename = "riot_client")]
    RiotClient,
}

impl Default for PatchlineFullName {
    fn default() -> PatchlineFullName {
        Self::Valorant
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PatchlineId {
    #[serde(rename = "")]
    Empty,
    #[serde(rename = "live")]
    Live,
    #[serde(rename = "pbe")]
    Pbe,
}

impl Default for PatchlineId {
    fn default() -> PatchlineId {
        Self::Empty
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProductId {
    #[serde(rename = "valorant")]
    Valorant,
    #[serde(rename = "riot_client")]
    RiotClient,
}

impl Default for ProductId {
    fn default() -> ProductId {
        Self::Valorant
    }
}

