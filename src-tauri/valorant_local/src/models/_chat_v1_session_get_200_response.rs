/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChatV1SessionGet200Response {
    #[serde(rename = "federated")]
    pub federated: bool,
    #[serde(rename = "game_name")]
    pub game_name: String,
    #[serde(rename = "game_tag")]
    pub game_tag: String,
    #[serde(rename = "loaded")]
    pub loaded: bool,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "pid")]
    pub pid: String,
    /// Player UUID
    #[serde(rename = "puuid")]
    pub puuid: String,
    #[serde(rename = "region")]
    pub region: String,
    #[serde(rename = "resource")]
    pub resource: String,
    #[serde(rename = "state")]
    pub state: String,
}

impl ChatV1SessionGet200Response {
    pub fn new(federated: bool, game_name: String, game_tag: String, loaded: bool, name: String, pid: String, puuid: String, region: String, resource: String, state: String) -> ChatV1SessionGet200Response {
        ChatV1SessionGet200Response {
            federated,
            game_name,
            game_tag,
            loaded,
            name,
            pid,
            puuid,
            region,
            resource,
            state,
        }
    }
}

