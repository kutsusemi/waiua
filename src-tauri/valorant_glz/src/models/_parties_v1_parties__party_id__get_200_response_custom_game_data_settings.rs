/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PartiesV1PartiesPartyIdGet200ResponseCustomGameDataSettings {
    /// Map ID
    #[serde(rename = "Map")]
    pub map: String,
    /// Game Mode
    #[serde(rename = "Mode")]
    pub mode: String,
    #[serde(rename = "UseBots")]
    pub use_bots: bool,
    #[serde(rename = "GamePod")]
    pub game_pod: String,
    #[serde(rename = "GameRules", deserialize_with = "Option::deserialize")]
    pub game_rules:
        Option<Box<models::PartiesV1PartiesPartyIdGet200ResponseCustomGameDataSettingsGameRules>>,
}

impl PartiesV1PartiesPartyIdGet200ResponseCustomGameDataSettings {
    pub fn new(
        map: String,
        mode: String,
        use_bots: bool,
        game_pod: String,
        game_rules: Option<
            models::PartiesV1PartiesPartyIdGet200ResponseCustomGameDataSettingsGameRules,
        >,
    ) -> PartiesV1PartiesPartyIdGet200ResponseCustomGameDataSettings {
        PartiesV1PartiesPartyIdGet200ResponseCustomGameDataSettings {
            map,
            mode,
            use_bots,
            game_pod,
            game_rules: if let Some(x) = game_rules {
                Some(Box::new(x))
            } else {
                None
            },
        }
    }
}
