/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PregameV1MatchesPreGameMatchIdLoadoutsGet200ResponseLoadoutsInnerItemsValue {
    /// Item ID
    #[serde(rename = "ID")]
    pub id: String,
    /// Item Type ID
    #[serde(rename = "TypeID")]
    pub type_id: String,
    #[serde(rename = "Sockets")]
    pub sockets: std::collections::HashMap<String, models::PregameV1MatchesPreGameMatchIdLoadoutsGet200ResponseLoadoutsInnerItemsValueSocketsValue>,
}

impl PregameV1MatchesPreGameMatchIdLoadoutsGet200ResponseLoadoutsInnerItemsValue {
    pub fn new(
        id: String,
        type_id: String,
        sockets: std::collections::HashMap<String, models::PregameV1MatchesPreGameMatchIdLoadoutsGet200ResponseLoadoutsInnerItemsValueSocketsValue>,
    ) -> PregameV1MatchesPreGameMatchIdLoadoutsGet200ResponseLoadoutsInnerItemsValue {
        PregameV1MatchesPreGameMatchIdLoadoutsGet200ResponseLoadoutsInnerItemsValue {
            id,
            type_id,
            sockets,
        }
    }
}
