/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CoreGameV1MatchesCurrentGameMatchIdGet200ResponseConnectionDetails {
    #[serde(rename = "GameServerHosts")]
    pub game_server_hosts: Vec<String>,
    #[serde(rename = "GameServerHost")]
    pub game_server_host: String,
    #[serde(rename = "GameServerPort")]
    pub game_server_port: f64,
    #[serde(rename = "GameServerObfuscatedIP")]
    pub game_server_obfuscated_ip: f64,
    #[serde(rename = "GameClientHash")]
    pub game_client_hash: f64,
    #[serde(rename = "PlayerKey")]
    pub player_key: String,
}

impl CoreGameV1MatchesCurrentGameMatchIdGet200ResponseConnectionDetails {
    pub fn new(
        game_server_hosts: Vec<String>,
        game_server_host: String,
        game_server_port: f64,
        game_server_obfuscated_ip: f64,
        game_client_hash: f64,
        player_key: String,
    ) -> CoreGameV1MatchesCurrentGameMatchIdGet200ResponseConnectionDetails {
        CoreGameV1MatchesCurrentGameMatchIdGet200ResponseConnectionDetails {
            game_server_hosts,
            game_server_host,
            game_server_port,
            game_server_obfuscated_ip,
            game_client_hash,
            player_key,
        }
    }
}
