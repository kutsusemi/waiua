/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PartiesV1PartiesPartyIdGet200ResponseCustomGameDataSettingsGameRules {
    #[serde(rename = "AllowGameModifiers", skip_serializing_if = "Option::is_none")]
    pub allow_game_modifiers: Option<String>,
    #[serde(rename = "IsOvertimeWinByTwo", skip_serializing_if = "Option::is_none")]
    pub is_overtime_win_by_two: Option<String>,
    #[serde(rename = "PlayOutAllRounds", skip_serializing_if = "Option::is_none")]
    pub play_out_all_rounds: Option<String>,
    #[serde(rename = "SkipMatchHistory", skip_serializing_if = "Option::is_none")]
    pub skip_match_history: Option<String>,
    #[serde(rename = "TournamentMode", skip_serializing_if = "Option::is_none")]
    pub tournament_mode: Option<String>,
}

impl PartiesV1PartiesPartyIdGet200ResponseCustomGameDataSettingsGameRules {
    pub fn new() -> PartiesV1PartiesPartyIdGet200ResponseCustomGameDataSettingsGameRules {
        PartiesV1PartiesPartyIdGet200ResponseCustomGameDataSettingsGameRules {
            allow_game_modifiers: None,
            is_overtime_win_by_two: None,
            play_out_all_rounds: None,
            skip_match_history: None,
            tournament_mode: None,
        }
    }
}

