/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StoreV1OffersGet200ResponseOffersInner {
    #[serde(rename = "OfferID")]
    pub offer_id: String,
    #[serde(rename = "IsDirectPurchase")]
    pub is_direct_purchase: bool,
    /// Date in ISO 8601 format
    #[serde(rename = "StartDate")]
    pub start_date: String,
    #[serde(rename = "Cost")]
    pub cost: std::collections::HashMap<String, f64>,
    #[serde(rename = "Rewards")]
    pub rewards: Vec<models::StoreV1OffersGet200ResponseOffersInnerRewardsInner>,
}

impl StoreV1OffersGet200ResponseOffersInner {
    pub fn new(
        offer_id: String,
        is_direct_purchase: bool,
        start_date: String,
        cost: std::collections::HashMap<String, f64>,
        rewards: Vec<models::StoreV1OffersGet200ResponseOffersInnerRewardsInner>,
    ) -> StoreV1OffersGet200ResponseOffersInner {
        StoreV1OffersGet200ResponseOffersInner {
            offer_id,
            is_direct_purchase,
            start_date,
            cost,
            rewards,
        }
    }
}
