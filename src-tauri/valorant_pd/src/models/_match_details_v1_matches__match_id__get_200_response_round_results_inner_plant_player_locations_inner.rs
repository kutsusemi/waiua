/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlantPlayerLocationsInner {
    /// Player UUID
    #[serde(rename = "subject")]
    pub subject: String,
    #[serde(rename = "viewRadians")]
    pub view_radians: f64,
    #[serde(rename = "location")]
    pub location: Box<models::MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlantPlayerLocationsInnerLocation>,
}

impl MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlantPlayerLocationsInner {
    pub fn new(subject: String, view_radians: f64, location: models::MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlantPlayerLocationsInnerLocation) -> MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlantPlayerLocationsInner {
        MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlantPlayerLocationsInner {
            subject,
            view_radians,
            location: Box::new(location),
        }
    }
}

