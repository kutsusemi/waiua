/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContractDefinitionsV3ItemUpgradesGet200ResponseDefinitionsInnerSidegradesInner {
    /// UUID
    #[serde(rename = "SidegradeID")]
    pub sidegrade_id: String,
    #[serde(rename = "Options")]
    pub options: Vec<models::ContractDefinitionsV3ItemUpgradesGet200ResponseDefinitionsInnerSidegradesInnerOptionsInner>,
    #[serde(rename = "Prerequisites")]
    pub prerequisites: Box<models::ContractDefinitionsV3ItemUpgradesGet200ResponseDefinitionsInnerSidegradesInnerPrerequisites>,
}

impl ContractDefinitionsV3ItemUpgradesGet200ResponseDefinitionsInnerSidegradesInner {
    pub fn new(sidegrade_id: String, options: Vec<models::ContractDefinitionsV3ItemUpgradesGet200ResponseDefinitionsInnerSidegradesInnerOptionsInner>, prerequisites: models::ContractDefinitionsV3ItemUpgradesGet200ResponseDefinitionsInnerSidegradesInnerPrerequisites) -> ContractDefinitionsV3ItemUpgradesGet200ResponseDefinitionsInnerSidegradesInner {
        ContractDefinitionsV3ItemUpgradesGet200ResponseDefinitionsInnerSidegradesInner {
            sidegrade_id,
            options,
            prerequisites: Box::new(prerequisites),
        }
    }
}

