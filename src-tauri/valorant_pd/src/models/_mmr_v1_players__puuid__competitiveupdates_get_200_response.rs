/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MmrV1PlayersPuuidCompetitiveupdatesGet200Response {
    #[serde(rename = "Version")]
    pub version: f64,
    /// Player UUID
    #[serde(rename = "Subject")]
    pub subject: String,
    #[serde(rename = "Matches")]
    pub matches: Vec<models::MmrV1PlayersPuuidCompetitiveupdatesGet200ResponseMatchesInner>,
}

impl MmrV1PlayersPuuidCompetitiveupdatesGet200Response {
    pub fn new(
        version: f64,
        subject: String,
        matches: Vec<models::MmrV1PlayersPuuidCompetitiveupdatesGet200ResponseMatchesInner>,
    ) -> MmrV1PlayersPuuidCompetitiveupdatesGet200Response {
        MmrV1PlayersPuuidCompetitiveupdatesGet200Response {
            version,
            subject,
            matches,
        }
    }
}
