/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlayerStatsInnerKillsInnerFinishingDamage {
    #[serde(rename = "damageType")]
    pub damage_type: DamageType,
    #[serde(rename = "damageItem")]
    pub damage_item: Box<models::MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlayerStatsInnerKillsInnerFinishingDamageDamageItem>,
    #[serde(rename = "isSecondaryFireMode")]
    pub is_secondary_fire_mode: bool,
}

impl MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlayerStatsInnerKillsInnerFinishingDamage {
    pub fn new(damage_type: DamageType, damage_item: models::MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlayerStatsInnerKillsInnerFinishingDamageDamageItem, is_secondary_fire_mode: bool) -> MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlayerStatsInnerKillsInnerFinishingDamage {
        MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlayerStatsInnerKillsInnerFinishingDamage {
            damage_type,
            damage_item: Box::new(damage_item),
            is_secondary_fire_mode,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DamageType {
    #[serde(rename = "Weapon")]
    Weapon,
    #[serde(rename = "Bomb")]
    Bomb,
    #[serde(rename = "Ability")]
    Ability,
    #[serde(rename = "Fall")]
    Fall,
    #[serde(rename = "Melee")]
    Melee,
    #[serde(rename = "Invalid")]
    Invalid,
    #[serde(rename = "")]
    Empty,
}

impl Default for DamageType {
    fn default() -> DamageType {
        Self::Weapon
    }
}
