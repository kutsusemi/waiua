/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContractsV1ContractsPuuidGet200ResponseContractsInner {
    /// UUID
    #[serde(rename = "ContractDefinitionID")]
    pub contract_definition_id: String,
    #[serde(rename = "ContractProgression")]
    pub contract_progression:
        Box<models::ContractsV1ContractsPuuidGet200ResponseContractsInnerContractProgression>,
    #[serde(rename = "ProgressionLevelReached")]
    pub progression_level_reached: f64,
    #[serde(rename = "ProgressionTowardsNextLevel")]
    pub progression_towards_next_level: f64,
}

impl ContractsV1ContractsPuuidGet200ResponseContractsInner {
    pub fn new(
        contract_definition_id: String,
        contract_progression: models::ContractsV1ContractsPuuidGet200ResponseContractsInnerContractProgression,
        progression_level_reached: f64,
        progression_towards_next_level: f64,
    ) -> ContractsV1ContractsPuuidGet200ResponseContractsInner {
        ContractsV1ContractsPuuidGet200ResponseContractsInner {
            contract_definition_id,
            contract_progression: Box::new(contract_progression),
            progression_level_reached,
            progression_towards_next_level,
        }
    }
}
