/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchDetailsV1MatchesMatchIdGet200Response {
    #[serde(rename = "matchInfo")]
    pub match_info: Box<models::MatchDetailsV1MatchesMatchIdGet200ResponseMatchInfo>,
    #[serde(rename = "players")]
    pub players: Vec<models::MatchDetailsV1MatchesMatchIdGet200ResponsePlayersInner>,
    #[serde(rename = "bots")]
    pub bots: Vec<serde_json::Value>,
    #[serde(rename = "coaches")]
    pub coaches: Vec<models::MatchDetailsV1MatchesMatchIdGet200ResponseCoachesInner>,
    #[serde(rename = "teams", deserialize_with = "Option::deserialize")]
    pub teams: Option<Vec<models::MatchDetailsV1MatchesMatchIdGet200ResponseTeamsInner>>,
    #[serde(rename = "roundResults", deserialize_with = "Option::deserialize")]
    pub round_results:
        Option<Vec<models::MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInner>>,
    #[serde(rename = "kills", deserialize_with = "Option::deserialize")]
    pub kills: Option<Vec<models::MatchDetailsV1MatchesMatchIdGet200ResponseKillsInner>>,
}

impl MatchDetailsV1MatchesMatchIdGet200Response {
    pub fn new(
        match_info: models::MatchDetailsV1MatchesMatchIdGet200ResponseMatchInfo,
        players: Vec<models::MatchDetailsV1MatchesMatchIdGet200ResponsePlayersInner>,
        bots: Vec<serde_json::Value>,
        coaches: Vec<models::MatchDetailsV1MatchesMatchIdGet200ResponseCoachesInner>,
        teams: Option<Vec<models::MatchDetailsV1MatchesMatchIdGet200ResponseTeamsInner>>,
        round_results: Option<
            Vec<models::MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInner>,
        >,
        kills: Option<Vec<models::MatchDetailsV1MatchesMatchIdGet200ResponseKillsInner>>,
    ) -> MatchDetailsV1MatchesMatchIdGet200Response {
        MatchDetailsV1MatchesMatchIdGet200Response {
            match_info: Box::new(match_info),
            players,
            bots,
            coaches,
            teams,
            round_results,
            kills,
        }
    }
}
