/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MmrV1PlayersPuuidGet200Response {
    #[serde(rename = "Version")]
    pub version: f64,
    /// Player UUID
    #[serde(rename = "Subject")]
    pub subject: String,
    #[serde(rename = "NewPlayerExperienceFinished")]
    pub new_player_experience_finished: bool,
    #[serde(rename = "QueueSkills")]
    pub queue_skills:
        std::collections::HashMap<String, models::MmrV1PlayersPuuidGet200ResponseQueueSkillsValue>,
    #[serde(rename = "LatestCompetitiveUpdate")]
    pub latest_competitive_update:
        Box<models::MmrV1PlayersPuuidGet200ResponseLatestCompetitiveUpdate>,
    #[serde(rename = "IsLeaderboardAnonymized")]
    pub is_leaderboard_anonymized: bool,
    #[serde(rename = "IsActRankBadgeHidden")]
    pub is_act_rank_badge_hidden: bool,
}

impl MmrV1PlayersPuuidGet200Response {
    pub fn new(
        version: f64,
        subject: String,
        new_player_experience_finished: bool,
        queue_skills: std::collections::HashMap<
            String,
            models::MmrV1PlayersPuuidGet200ResponseQueueSkillsValue,
        >,
        latest_competitive_update: models::MmrV1PlayersPuuidGet200ResponseLatestCompetitiveUpdate,
        is_leaderboard_anonymized: bool,
        is_act_rank_badge_hidden: bool,
    ) -> MmrV1PlayersPuuidGet200Response {
        MmrV1PlayersPuuidGet200Response {
            version,
            subject,
            new_player_experience_finished,
            queue_skills,
            latest_competitive_update: Box::new(latest_competitive_update),
            is_leaderboard_anonymized,
            is_act_rank_badge_hidden,
        }
    }
}
