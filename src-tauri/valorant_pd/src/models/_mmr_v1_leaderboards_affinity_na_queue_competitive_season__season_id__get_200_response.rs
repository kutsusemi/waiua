/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MmrV1LeaderboardsAffinityNaQueueCompetitiveSeasonSeasonIdGet200Response {
    #[serde(rename = "Deployment")]
    pub deployment: String,
    /// Queue ID
    #[serde(rename = "QueueID")]
    pub queue_id: String,
    /// Season ID
    #[serde(rename = "SeasonID")]
    pub season_id: String,
    #[serde(rename = "Players")]
    pub players: Vec<models::MmrV1LeaderboardsAffinityNaQueueCompetitiveSeasonSeasonIdGet200ResponsePlayersInner>,
    #[serde(rename = "totalPlayers")]
    pub total_players: f64,
    #[serde(rename = "immortalStartingPage")]
    pub immortal_starting_page: f64,
    #[serde(rename = "immortalStartingIndex")]
    pub immortal_starting_index: f64,
    #[serde(rename = "topTierRRThreshold")]
    pub top_tier_rr_threshold: f64,
    #[serde(rename = "tierDetails")]
    pub tier_details: std::collections::HashMap<String, models::MmrV1LeaderboardsAffinityNaQueueCompetitiveSeasonSeasonIdGet200ResponseTierDetailsValue>,
    #[serde(rename = "startIndex")]
    pub start_index: f64,
    #[serde(rename = "query")]
    pub query: String,
}

impl MmrV1LeaderboardsAffinityNaQueueCompetitiveSeasonSeasonIdGet200Response {
    pub fn new(
        deployment: String,
        queue_id: String,
        season_id: String,
        players: Vec<models::MmrV1LeaderboardsAffinityNaQueueCompetitiveSeasonSeasonIdGet200ResponsePlayersInner>,
        total_players: f64,
        immortal_starting_page: f64,
        immortal_starting_index: f64,
        top_tier_rr_threshold: f64,
        tier_details: std::collections::HashMap<String, models::MmrV1LeaderboardsAffinityNaQueueCompetitiveSeasonSeasonIdGet200ResponseTierDetailsValue>,
        start_index: f64,
        query: String,
    ) -> MmrV1LeaderboardsAffinityNaQueueCompetitiveSeasonSeasonIdGet200Response {
        MmrV1LeaderboardsAffinityNaQueueCompetitiveSeasonSeasonIdGet200Response {
            deployment,
            queue_id,
            season_id,
            players,
            total_players,
            immortal_starting_page,
            immortal_starting_index,
            top_tier_rr_threshold,
            tier_details,
            start_index,
            query,
        }
    }
}
