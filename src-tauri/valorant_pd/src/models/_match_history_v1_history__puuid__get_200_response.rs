/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchHistoryV1HistoryPuuidGet200Response {
    /// Player UUID
    #[serde(rename = "Subject")]
    pub subject: String,
    #[serde(rename = "BeginIndex")]
    pub begin_index: f64,
    #[serde(rename = "EndIndex")]
    pub end_index: f64,
    #[serde(rename = "Total")]
    pub total: f64,
    #[serde(rename = "History")]
    pub history: Vec<models::MatchHistoryV1HistoryPuuidGet200ResponseHistoryInner>,
}

impl MatchHistoryV1HistoryPuuidGet200Response {
    pub fn new(
        subject: String,
        begin_index: f64,
        end_index: f64,
        total: f64,
        history: Vec<models::MatchHistoryV1HistoryPuuidGet200ResponseHistoryInner>,
    ) -> MatchHistoryV1HistoryPuuidGet200Response {
        MatchHistoryV1HistoryPuuidGet200Response {
            subject,
            begin_index,
            end_index,
            total,
            history,
        }
    }
}
