/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountXpV1PlayersPuuidGet200ResponseHistoryInner {
    /// Match ID
    #[serde(rename = "ID")]
    pub id: String,
    /// Date in ISO 8601 format
    #[serde(rename = "MatchStart")]
    pub match_start: String,
    #[serde(rename = "StartProgress")]
    pub start_progress: Box<models::AccountXpV1PlayersPuuidGet200ResponseProgress>,
    #[serde(rename = "EndProgress")]
    pub end_progress: Box<models::AccountXpV1PlayersPuuidGet200ResponseProgress>,
    #[serde(rename = "XPDelta")]
    pub xp_delta: f64,
    #[serde(rename = "XPSources")]
    pub xp_sources: Vec<models::AccountXpV1PlayersPuuidGet200ResponseHistoryInnerXpSourcesInner>,
    #[serde(rename = "XPMultipliers")]
    pub xp_multipliers: Vec<serde_json::Value>,
}

impl AccountXpV1PlayersPuuidGet200ResponseHistoryInner {
    pub fn new(
        id: String,
        match_start: String,
        start_progress: models::AccountXpV1PlayersPuuidGet200ResponseProgress,
        end_progress: models::AccountXpV1PlayersPuuidGet200ResponseProgress,
        xp_delta: f64,
        xp_sources: Vec<models::AccountXpV1PlayersPuuidGet200ResponseHistoryInnerXpSourcesInner>,
        xp_multipliers: Vec<serde_json::Value>,
    ) -> AccountXpV1PlayersPuuidGet200ResponseHistoryInner {
        AccountXpV1PlayersPuuidGet200ResponseHistoryInner {
            id,
            match_start,
            start_progress: Box::new(start_progress),
            end_progress: Box::new(end_progress),
            xp_delta,
            xp_sources,
            xp_multipliers,
        }
    }
}
