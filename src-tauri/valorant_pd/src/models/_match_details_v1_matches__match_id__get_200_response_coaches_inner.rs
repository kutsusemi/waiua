/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchDetailsV1MatchesMatchIdGet200ResponseCoachesInner {
    /// Player UUID
    #[serde(rename = "subject")]
    pub subject: String,
    #[serde(rename = "teamId")]
    pub team_id: TeamId,
}

impl MatchDetailsV1MatchesMatchIdGet200ResponseCoachesInner {
    pub fn new(
        subject: String,
        team_id: TeamId,
    ) -> MatchDetailsV1MatchesMatchIdGet200ResponseCoachesInner {
        MatchDetailsV1MatchesMatchIdGet200ResponseCoachesInner { subject, team_id }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TeamId {
    #[serde(rename = "Blue")]
    Blue,
    #[serde(rename = "Red")]
    Red,
}

impl Default for TeamId {
    fn default() -> TeamId {
        Self::Blue
    }
}
