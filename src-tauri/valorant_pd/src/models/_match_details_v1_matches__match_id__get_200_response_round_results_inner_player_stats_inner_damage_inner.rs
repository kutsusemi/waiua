/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlayerStatsInnerDamageInner {
    /// Player UUID
    #[serde(rename = "receiver")]
    pub receiver: String,
    #[serde(rename = "damage")]
    pub damage: f64,
    #[serde(rename = "legshots")]
    pub legshots: f64,
    #[serde(rename = "bodyshots")]
    pub bodyshots: f64,
    #[serde(rename = "headshots")]
    pub headshots: f64,
}

impl MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlayerStatsInnerDamageInner {
    pub fn new(receiver: String, damage: f64, legshots: f64, bodyshots: f64, headshots: f64) -> MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlayerStatsInnerDamageInner {
        MatchDetailsV1MatchesMatchIdGet200ResponseRoundResultsInnerPlayerStatsInnerDamageInner {
            receiver,
            damage,
            legshots,
            bodyshots,
            headshots,
        }
    }
}

