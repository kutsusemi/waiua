/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StoreV2StorefrontPuuidGet200ResponseFeaturedBundleBundleItemOffersInner {
    /// UUID
    #[serde(rename = "BundleItemOfferID")]
    pub bundle_item_offer_id: String,
    #[serde(rename = "Offer")]
    pub offer: Box<models::StoreV1OffersGet200ResponseOffersInner>,
    #[serde(rename = "DiscountPercent")]
    pub discount_percent: f64,
    #[serde(rename = "DiscountedCost")]
    pub discounted_cost: std::collections::HashMap<String, f64>,
}

impl StoreV2StorefrontPuuidGet200ResponseFeaturedBundleBundleItemOffersInner {
    pub fn new(
        bundle_item_offer_id: String,
        offer: models::StoreV1OffersGet200ResponseOffersInner,
        discount_percent: f64,
        discounted_cost: std::collections::HashMap<String, f64>,
    ) -> StoreV2StorefrontPuuidGet200ResponseFeaturedBundleBundleItemOffersInner {
        StoreV2StorefrontPuuidGet200ResponseFeaturedBundleBundleItemOffersInner {
            bundle_item_offer_id,
            offer: Box::new(offer),
            discount_percent,
            discounted_cost,
        }
    }
}
