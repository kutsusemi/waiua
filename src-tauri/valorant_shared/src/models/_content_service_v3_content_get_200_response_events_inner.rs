/*
 * Valorant API
 *
 * Valorant API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContentServiceV3ContentGet200ResponseEventsInner {
    /// UUID
    #[serde(rename = "ID")]
    pub id: String,
    #[serde(rename = "Name")]
    pub name: String,
    /// Date in ISO 8601 format
    #[serde(rename = "StartTime")]
    pub start_time: String,
    /// Date in ISO 8601 format
    #[serde(rename = "EndTime")]
    pub end_time: String,
    #[serde(rename = "IsActive")]
    pub is_active: bool,
}

impl ContentServiceV3ContentGet200ResponseEventsInner {
    pub fn new(
        id: String,
        name: String,
        start_time: String,
        end_time: String,
        is_active: bool,
    ) -> ContentServiceV3ContentGet200ResponseEventsInner {
        ContentServiceV3ContentGet200ResponseEventsInner {
            id,
            name,
            start_time,
            end_time,
            is_active,
        }
    }
}
